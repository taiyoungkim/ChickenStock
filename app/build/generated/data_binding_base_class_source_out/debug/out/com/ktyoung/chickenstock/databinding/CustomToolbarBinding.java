// Generated by data binding compiler. Do not edit!
package com.ktyoung.chickenstock.databinding;

import android.graphics.drawable.Drawable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.ktyoung.chickenstock.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class CustomToolbarBinding extends ViewDataBinding {
  @NonNull
  public final ImageView ivLeftIcon;

  @NonNull
  public final ImageView ivLeftIconTwo;

  @NonNull
  public final ImageView ivRightIcon;

  @NonNull
  public final TextView textRightTitle;

  @NonNull
  public final TextView textSubTitle;

  @NonNull
  public final TextView textTitle;

  @Bindable
  protected View.OnClickListener mLeftIconClick;

  @Bindable
  protected View.OnClickListener mLeftIconTwoClick;

  @Bindable
  protected View.OnClickListener mRightIconClick;

  @Bindable
  protected View.OnClickListener mRightTitleClick;

  @Bindable
  protected String mTitle;

  @Bindable
  protected String mSubTitle;

  @Bindable
  protected String mRightTitle;

  @Bindable
  protected Drawable mLeftIcon;

  @Bindable
  protected Drawable mLeftIconTwo;

  @Bindable
  protected Drawable mRightIcon;

  protected CustomToolbarBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView ivLeftIcon, ImageView ivLeftIconTwo, ImageView ivRightIcon, TextView textRightTitle,
      TextView textSubTitle, TextView textTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ivLeftIcon = ivLeftIcon;
    this.ivLeftIconTwo = ivLeftIconTwo;
    this.ivRightIcon = ivRightIcon;
    this.textRightTitle = textRightTitle;
    this.textSubTitle = textSubTitle;
    this.textTitle = textTitle;
  }

  public abstract void setLeftIconClick(@Nullable View.OnClickListener leftIconClick);

  @Nullable
  public View.OnClickListener getLeftIconClick() {
    return mLeftIconClick;
  }

  public abstract void setLeftIconTwoClick(@Nullable View.OnClickListener leftIconTwoClick);

  @Nullable
  public View.OnClickListener getLeftIconTwoClick() {
    return mLeftIconTwoClick;
  }

  public abstract void setRightIconClick(@Nullable View.OnClickListener rightIconClick);

  @Nullable
  public View.OnClickListener getRightIconClick() {
    return mRightIconClick;
  }

  public abstract void setRightTitleClick(@Nullable View.OnClickListener rightTitleClick);

  @Nullable
  public View.OnClickListener getRightTitleClick() {
    return mRightTitleClick;
  }

  public abstract void setTitle(@Nullable String title);

  @Nullable
  public String getTitle() {
    return mTitle;
  }

  public abstract void setSubTitle(@Nullable String subTitle);

  @Nullable
  public String getSubTitle() {
    return mSubTitle;
  }

  public abstract void setRightTitle(@Nullable String rightTitle);

  @Nullable
  public String getRightTitle() {
    return mRightTitle;
  }

  public abstract void setLeftIcon(@Nullable Drawable leftIcon);

  @Nullable
  public Drawable getLeftIcon() {
    return mLeftIcon;
  }

  public abstract void setLeftIconTwo(@Nullable Drawable leftIconTwo);

  @Nullable
  public Drawable getLeftIconTwo() {
    return mLeftIconTwo;
  }

  public abstract void setRightIcon(@Nullable Drawable rightIcon);

  @Nullable
  public Drawable getRightIcon() {
    return mRightIcon;
  }

  @NonNull
  public static CustomToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.custom_toolbar, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static CustomToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<CustomToolbarBinding>inflateInternal(inflater, R.layout.custom_toolbar, root, attachToRoot, component);
  }

  @NonNull
  public static CustomToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.custom_toolbar, null, false, component)
   */
  @NonNull
  @Deprecated
  public static CustomToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<CustomToolbarBinding>inflateInternal(inflater, R.layout.custom_toolbar, null, false, component);
  }

  public static CustomToolbarBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static CustomToolbarBinding bind(@NonNull View view, @Nullable Object component) {
    return (CustomToolbarBinding)bind(component, view, R.layout.custom_toolbar);
  }
}
